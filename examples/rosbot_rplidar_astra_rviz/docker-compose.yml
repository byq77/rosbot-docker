version: "2.3"
services:
  # ROS Melodic

  rosbot:
    build:
      context: ../../ 
      dockerfile: ./Dockerfile
    tty: true 
    network_mode: host       
    restart: on-failure
    environment:
      - "ROS_MASTER_URI=http://my-ros-master:11311"
      - "SERIAL_PORT=/dev/ttyS1" # default: ttyS1 - rosbot2.0; ttyS4 - rosbot2.0 pro
    privileged: false
    devices:
      - "/dev/ttyS4"   # must match environment SERIAL_PORT 
    command: roslaunch rosbot_description rosbot_docker.launch

  # ROS Noetic
  my-ros-master:
    image: ros:noetic-ros-core
    restart: on-failure
    tty: true 
    network_mode: host  
    environment:
      - "ROS_MASTER_URI=http://my-ros-master:11311"    
    command: stdbuf -o L roscore

  # ROS Noetic + ROS 2 eloquent
  bridge:
    image: ros:eloquent-ros1-bridge
    restart: on-failure
    network_mode: host
    environment:
      - "ROS_MASTER_URI=http://my-ros-master:11311"
    command: 
      - bash
      - -c
      - |
        stdbuf -o L roscore &
        ros2 run ros1_bridge dynamic_bridge

  # ROS 2 
  rviz2:
    image: husarion/rviz2-rosbot:eloquent
    restart: on-failure
    privileged: true
    network_mode: host
    environment: 
      - QT_X11_NO_MITSHM=1 
      - DISPLAY=$DISPLAY 
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    command: ros2 run rviz2 rviz2

  astra:
    image: husarion/astra:latest
    restart: unless-stopped
    environment:
      - "ROS_MASTER_URI=http://my-ros-master:11311"
    devices:
      - /dev/bus/usb/001/006
    tty: true 
    network_mode: host       
    command: roslaunch astra_camera astra.launch

  rplidar:
    image: husarion/rplidar:latest
    restart: unless-stopped
    environment:

        - "ROS_MASTER_URI=http://my-ros-master:11311"
    devices:
      - /dev/ttyUSB0
    tty: true 
    network_mode: host       
    command: roslaunch rplidar_ros rplidar.launch # For Rosbot 2.0 PRO use roslaunch rplidar_ros rplidar_a3.launch